@page "/Room_Index"
@page "/Room_Index/{ThisRoomId:guid}"

@using Microsoft.Extensions.Logging
@using Microsoft.AspNetCore.Authorization
@*@inject IAuthorizationService AuthorizationService*@
@inject NavigationManager NavigationManager
@inject ILogger<Room_Index> Logger
@inject HttpClient _http

@*@attribute [Authorize]*@

@if (room == null)
{
    <MudAlert Severity="Severity.Warning" Variant="Variant.Outlined">Loading...</MudAlert>
}
else
{
<h1>Room: @room.Name | @room.ID</h1>
}

@*<AuthorizeView Roles="Administrator">
        <Authorized>
            The user @context.User.FindFirst(ClaimTypes.Name)?.Value is authorized as: @context.User.FindFirst(ClaimTypes.Role)?.Value
        </Authorized>
        <NotAuthorized>
            The User is not authorized
        </NotAuthorized>
 </AuthorizeView>*@

<hr />
<br />

<div align="center">
@if (FirstVacantSlot != null)
    {
        <MudButton Variant="Variant.Filled" Color="Color.Default" @onclick="@(e => UpdateTimeSlot(@FirstVacantSlot, "InstaBooked", InstaBookerGuid))">InstaBook&trade; @FirstVacantSlot.TimeSlotStart.ToShortDateString() @FirstVacantSlot.TimeSlotStart.ToLocalTime().ToShortTimeString() - @FirstVacantSlot.TimeSlotEnd.ToLocalTime().ToShortTimeString()</MudButton>
        @if (SelectedItem != null)
        {
            @if(SelectedItem.IsVacant == true)
            {
                //Vacant timeslot for IB+
                <MudButton Variant="Variant.Filled" Color="Color.Success" @onclick="@(e => UpdateTimeSlot(SelectedItem, "InstaBooked+", InstaBookerGuid))">InstaBookPlus&trade; @SelectedItem.TimeSlotStart.ToShortDateString() @SelectedItem.TimeSlotStart.ToLocalTime().ToShortTimeString() - @SelectedItem.TimeSlotEnd.ToLocalTime().ToShortTimeString()</MudButton>
            }
            else
            {
                //Alert message no vacant slot for IB+
                <MudAlert Severity="Severity.Warning">Timeslot is not vacant. Please choose other time to schedule.</MudAlert>

            }
        }
    }
</div>

<MudTable Items="@currentTimeSlots" Dense="true" Hover="true" Bordered="true" Striped="true" FixedHeader="true" FixedFooter="true" @bind-SelectedItem="SelectedItem" RowsPerPage="12">
    <ToolBarContent>
        @*<MudText Typo="Typo.h6">Schedule for @_room.Name</MudText>*@
        <MudSpacer />
        @*<MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>*@
    </ToolBarContent>
    <HeaderContent>
        @*<MudTh>Id</MudTh>*@
        <MudTh>Start</MudTh>
        <MudTh>End</MudTh>
        <MudTh>Title</MudTh>
        <MudTh>Booker</MudTh>
        <MudTh>Booking made</MudTh>
    </HeaderContent>
    <RowTemplate>
        @*<MudTd DataLabel="Id">@context.ID</MudTd>*@
        <MudTd DataLabel="Start">@context.TimeSlotStart.ToLocalTime().ToShortTimeString()</MudTd>
        <MudTd DataLabel="End">@context.TimeSlotEnd.ToLocalTime().ToShortTimeString()</MudTd>
        <MudTd DataLabel="Title">@context.Title</MudTd>
        <MudTd DataLabel="Booker">@context.Booker.Name</MudTd>  
        <MudTd DataLabel="Updated">@context.UpdatedUTC</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 12, 24, 36, 48, 60 }" />
    </PagerContent>
</MudTable>
<div class="d-flex flex-wrap mt-4">
    <MudSpacer />
    <MudText Inline="true" Class="align-self-center" Style="min-width:200px;">Selected: @SelectedItem?.TimeSlotStart.ToLocalTime().ToShortTimeString() - @SelectedItem?.TimeSlotEnd.ToLocalTime().ToShortTimeString() : @SelectedItem?.Title</MudText>
    <MudSpacer />
    </div>

    <hr />
<MudButton Variant="Variant.Filled" @onclick="@(e => NavigateToPage("Index"))">RoomPicker</MudButton>